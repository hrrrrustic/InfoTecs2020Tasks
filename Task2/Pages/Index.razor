@page "/"
@using Task2.Data
@using Task2.Models
@using Task2.Services
@inject FeedService FeedService
@inject FeedReaderSettings ReaderSettings

<div class="container">
    @foreach (Feed feed in _feeds)
    {
        <div class="row">
            <div class="col-md-12 card">
                <div class="card-body">
                    <h2 class="card-title">@feed.Title</h2>
                    <button type="button" class="btn btn-primary" @onclick="@(k => this._collapseFeed[feed.FeedId] = !this._collapseFeed[feed.FeedId])">Description @(_collapseFeed[feed.FeedId] ? "+" : "-")</button>
                    <div class="@(_collapseFeed[feed.FeedId] ? "collapse" : "") card-body">
                        @if (ReaderSettings.SupportFormatting)
                        {
                            <p>@((MarkupString)feed.Description))</p>
                        }
                        else
                        {
                            <p>@feed.Description</p>
                        }
                    </div>
                    <p>Publication Date : @feed.PublicationTime</p>
                    <a class="btn btn-secondary" href="@feed.SourceLink" target="_blank">View details</a>
                </div>
            </div>
        </div>
    }
</div>


@code
                            {
    private Dictionary<Guid, bool> _collapseFeed;
    private List<Feed> _feeds;

    protected override void OnInitialized()
    {
        List<string> source = ReaderSettings.Sources.Where(k => k.Active).Select(k => k.Link).ToList();
        _feeds = FeedService.GetFeeds(source);
        _collapseFeed = new Dictionary<Guid, bool>(_feeds.Select(k => new KeyValuePair<Guid, bool>(k.FeedId, true)));
    }

}