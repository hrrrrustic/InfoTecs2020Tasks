@page "/settings"
@using System.Collections.ObjectModel
@using MatBlazor
@using Task2.Data
@using Microsoft.AspNetCore.Components
@using Task2.Models
@using Task2.Services
@inject FeedReaderSettings ReaderSettings
@inject FeedService FeedService
<h3>Settings</h3>

<MatAccordion>
    <MatExpansionPanel @bind-Expanded="@_sourceSettings">
        <MatExpansionPanelSummary>
            <MatExpansionPanelHeader>Source settings</MatExpansionPanelHeader>
        </MatExpansionPanelSummary>
        <MatExpansionPanelDetails>
            <div class="container">
                <div class="row">
                    <div class="col-md-8">
                        <MatAccordion>
                            <MatExpansionPanel @bind-Expanded="@_addedLinksSettings">
                                <MatExpansionPanelSummary>
                                    <MatExpansionPanelHeader>Rss source links</MatExpansionPanelHeader>
                                </MatExpansionPanelSummary>
                                @foreach (RssSource source in ReaderSettings.Sources)
                                {
                                    <MatExpansionPanelDetails>
                                        <div class="container">
                                            <div class="row">
                                                <div class="col-md-8">
                                                    <p>
                                                        @source.Link
                                                    </p>
                                                </div>
                                                <div class="col-md-2">
                                                    <MatButton OnClick="@(() => ClickRemove(source.Link))" TrailingIcon="delete"></MatButton>
                                                </div>
                                                <div class="col-md-2">
                                                    <MatButton OnClick="@(() => ClickActive(source.Link))" TrailingIcon="@(source.Active ? "check_box" : "check_box_outline_blank")"></MatButton>
                                                </div>
                                            </div>
                                        </div>
                                    </MatExpansionPanelDetails>
                                }
                            </MatExpansionPanel>
                        </MatAccordion>
                    </div>
                    <div class="col-md-4">
                        <MatAccordion>
                            <MatExpansionPanel @bind-Expanded="@_addLinkSettings">
                                <MatExpansionPanelSummary>
                                    <MatExpansionPanelHeader>Add source link</MatExpansionPanelHeader>
                                </MatExpansionPanelSummary>
                                <MatExpansionPanelDetails>
                                    <div class="container">
                                        <div class="row">
                                            <div class="col-md-8">
                                                <MatStringField @bind-Value="@_newLink" Label="Link"></MatStringField>
                                            </div>
                                            <div class="col-md-4">
                                                <MatButton OnClick="@ClickAdd" TrailingIcon="add"></MatButton>
                                            </div>
                                        </div>
                                    </div>
                                </MatExpansionPanelDetails>
                            </MatExpansionPanel>
                        </MatAccordion>
                    </div>
                </div>
            </div>
        </MatExpansionPanelDetails>
    </MatExpansionPanel>
    <MatExpansionPanel>
        <MatExpansionPanelSummary>
            <MatExpansionPanelHeader>Formatting settings</MatExpansionPanelHeader>
        </MatExpansionPanelSummary>
        <MatExpansionPanelDetails>
            <div>
                <MatCheckbox @bind-Value="@ReaderSettings.SupportFormatting" Label="@(GetLabel(ReaderSettings.SupportFormatting))"></MatCheckbox>
            </div>
        </MatExpansionPanelDetails>
    </MatExpansionPanel>
    <MatExpansionPanel>
        <MatExpansionPanelSummary>
            <MatExpansionPanelHeader>Auto update settings</MatExpansionPanelHeader>
        </MatExpansionPanelSummary>
        <MatExpansionPanelDetails>
            <div>
                <MatTextField @bind-Value="@ReaderSettings.RefreshTime" Label="Update time seconds"></MatTextField>
            </div>
        </MatExpansionPanelDetails>
    </MatExpansionPanel>
</MatAccordion>




@code
{
    private bool _sourceSettings = false;
    private bool _addedLinksSettings = false;
    private bool _addLinkSettings = false;
    private string _newLink;

    string GetLabel(bool val)
    {
        return !val ? "No formatting" : "Formatting";
    }

    public void ClickRemove(string item)
    {
        ReaderSettings.Sources.Remove(ReaderSettings.Sources.Single(k => k.Link == item));
    }

    public void ClickActive(string item)
    {
        int ind = ReaderSettings.Sources.FindIndex(k => k.Link == item);
        ReaderSettings.Sources[ind] = new RssSource(ReaderSettings.Sources[ind].Link, !ReaderSettings.Sources[ind].Active);
    }
    public void ClickAdd()
    {
        if (string.IsNullOrWhiteSpace(_newLink))
        {
            _newLink = "Nope";
            return;
        }

        bool valid = FeedService.ValidSource(_newLink);

        if (!valid)
        {
            _newLink = "Invalid link";
            return;
        }

        ReaderSettings.Sources.Add(new RssSource(_newLink, true));
        _newLink = string.Empty;
    }

}

